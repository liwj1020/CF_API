/*-------------------------------------------------------------------*/
/*                                                                   */
/*  Program . . : CBX910                                             */
/*  Description : Process data queue entries from output queue       */
/*  Author  . . : Carsten Flensburg                                  */
/*                                                                   */
/*                                                                   */
/*  Program description:                                             */
/*    This program will retrieve data queue entries from the data    */
/*    queue name and library passed in the two program parameters.   */
/*                                                                   */
/*    For the data queue entries to be processed they must be        */
/*    generated by the *SPOOL function and have record type 01 -     */
/*    which identifies a spooled file entering the READY status      */
/*    on an output queue having a data queue attached.               */
/*                                                                   */
/*    Depending on the specified conditions this example either      */
/*    sends a net spooled file to a specified user ID - and/or       */
/*    changes the spooled file's output queue to the output queue    */
/*    specified in the user profile having created the spooled       */
/*    file. All actions are logged to the submitted job's joblog.    */
/*                                                                   */
/*    To test this program you need to replace the <conditions>      */
/*    in the source statements below with appropriate values for     */
/*    your environment and compile the source.                       */
/*                                                                   */
/*    The generated program should be submitted to a job queue       */
/*    dedicated to long running functions. Specify a data queue      */
/*    name and library as the call parameters, this program will     */
/*    then create the data queue with the required attributes.       */
/*                                                                   */
/*    Further you will need to change or create an output queue      */
/*    to specify the above data queue on its DTAQ attribute. Now     */
/*    when a spooled file enters the READY status on this output     */
/*    queue a data queue entry will be generated and subsequently    */
/*    retrieved by this program.                                     */
/*                                                                   */
/*    To follow the process you could start a service job against    */
/*    the submitted job and source debug this program. To end the    */
/*    test process simply end the submitted job controlled.          */
/*                                                                   */
/*    Here are the steps outlined above:                             */
/*                                                                   */
/*    1. Set up proper conditions replacing <conditions> constants   */
/*       and add or remove conditions as appropriate.                */
/*                                                                   */
/*    2. CrtClPgm   Pgm( CBX910 )                                    */
/*                  SrcFile( QCLSRC )                                */
/*                  SrcMbr( *PGM )                                   */
/*                  Option( *SRCDBG )                                */
/*                                                                   */
/*    3. SbmJob     Cmd( Call Pgm( CBX910 )                          */
/*                            Parm( <dtaqname> <dtaqlib> ))          */
/*                  Job( OUTQMON )                                   */
/*                  JobQ( <jobq name> )                              */
/*                                                                   */
/*    4. ChgOutQ    OutQ( <outqname> )                               */
/*                  DtaQ( <dtaqlib>/<dtaqname> )                     */
/*                                                                   */
/*    5. StrSrvJob  OUTQMON                                          */
/*                                                                   */
/*    6. StrDbg     Pgm( CBX910 )                                    */
/*                  OpmSrc( *YES )                                   */
/*                                                                   */
/*    -- Test process --                                             */
/*                                                                   */
/*    7. EndDbg                                                      */
/*                                                                   */
/*    8. EndSrvJob                                                   */
/*                                                                   */
/*    7. EndJob     Job( CBXLOG )                                    */
/*                  Option( *CNTRLD )                                */
/*                  Delay( 30 )                                      */
/*                                                                   */
/*    Note: The spooling function generates a data queue entry if    */
/*          the following is true: A spooled file is entering the    */
/*          READY status on an output queue - and a data queue is    */
/*          specified on the output queue object's DTAQ attribute.   */
/*                                                                   */
/*          Holding and subsequently releasing a spooled file will   */
/*          therefore - under the above circumstances - trigger a    */
/*          new data queue entry. For test purposes and to avoid     */
/*          that the spooled file is written again and again, you    */
/*          could hold the output queue using the HLDOUTQ command    */
/*          and use the hold and release spooled file technique to   */
/*          generate test entries to the data queue.                 */
/*                                                                   */
/*                                                                   */
/*-------------------------------------------------------------------*/
     Pgm   ( &DtaqNam  &DtaqLib )
 
/*-- Parameters:  ---------------------------------------------------*/
     Dcl     &DtaqNam      *Char     10
     Dcl     &DtaqLib      *Char     10
 
/*-- Receive data queue entry paramters:  ---------------------------*/
     Dcl     &DtaqE        *Char    128
     Dcl     &DtaLen       *Dec     ( 5 0 )   128
     Dcl     &DtaqWait     *Dec     ( 5 0 )   25
 
/*-- Data queue entry record format type 01:  -----------------------*/
     Dcl     &D1Func       *Char     10
     Dcl     &D1RcdTyp     *Char      2
     Dcl     &D1Job        *Char     26
     Dcl     &D1JobNam     *Char     10
     Dcl     &D1UsrNam     *Char     10
     Dcl     &D1JobNbr     *Char      6
     Dcl     &D1SplfNam    *Char     10
     Dcl     &D1SplfNbr    *Dec      10
     Dcl     &D1SplfNbrB   *Char      4
     Dcl     &D1SplfNbrC   *Char      6
     Dcl     &D1OutqNam    *Char     10
     Dcl     &D1OutqLib    *Char     10
     Dcl     &D1SysNam     *Char      8
     Dcl     &D1CrtDat     *Char      7
     Dcl     &D1CrtTim     *Char      6
 
/*-- Retrieve spooled file attributes parameters:  ------------------*/
     Dcl     &SPLA0100     *Char    256
     Dcl     &RcvVarLen    *Char      4      x'00000100'
     Dcl     &IntJobId     *Char     16      ' '
     Dcl     &IntSplfId    *Char     16      ' '
 
/*-- Spooled file attributes:  --------------------------------------*/
     Dcl     &SfFrmTyp     *Char     10
     Dcl     &SfUsrDta     *Char     10
     Dcl     &SfOpnPgm     *Char     10
 
/*-- CHGSPLFA parameters:  ------------------------------------------*/
     Dcl     &ToOutqNam    *Char     10
     Dcl     &ToOutqLib    *Char     10
     Dcl     &ToFormType   *Char     10
 
/*-- SNDNETSPLF parameters:  ----------------------------------------*/
     Dcl     &ToUsrId      *Char      8
     Dcl     &ToUsrAdr     *Char      8
 
/*-- Global variables:  ---------------------------------------------*/
     Dcl     &PrtDev       *Char     10
     Dcl     &EndSts       *Char      1
     Dcl     &ErrMsg       *Char    128
     Dcl     &ErrPnd       *Lgl
 
/*-- Global error monitoring:  --------------------------------------*/
     MonMsg      CPF0000   *None       Goto Error
 
/*-- Mainline:  -----------------------------------------------------*/
 
 
     ChkObj      &DtaqLib     *LIB
 
     ChkObj      &DtaqLib/&DtaqNam     *DTAQ
     MonMsg      CPF9801     *N        Do
 
     RcvMsg      MsgType( *EXCP )      Rmv( *YES )
 
     CrtDtaQ     DtaQ( &DtaqLib/&DtaqNam )  +
                 MaxLen( 128 )              +
                 Seq( *FIFO )               +
                 Size( *MAX2GB )            +
                 AutoRcl( *YES )
     EndDo
 
 RcvDtaQ:
     RtvJobA     EndSts( &EndSts )
 
     If        ( &EndSts  =  '0' )     Do
 
     Call        QRCVDTAQ   ( &DtaqNam      +
                              &DtaqLib      +
                              &DtaLen       +
                              &DtaqE        +
                              &DtaqWait     +
                            )
 
     If        ( &DtaLen  >  0 )       Do
 
     ChgVar      &D1Func        %Sst( &DtaqE   1  10 )
     ChgVar      &D1RcdTyp      %Sst( &DtaqE  11   2 )
 
     If       (( &D1Func   =  '*SPOOL' )    *And                +
               ( &D1RcdTyp =  '01'     ))   Do
 
     ChgVar      &D1Job         %Sst( &DtaqE  13  26 )
     ChgVar      &D1JobNam      %Sst( &DtaqE  13  10 )
     ChgVar      &D1UsrNam      %Sst( &DtaqE  23  10 )
     ChgVar      &D1JobNbr      %Sst( &DtaqE  33   6 )
     ChgVar      &D1SplfNam     %Sst( &DtaqE  39  10 )
     ChgVar      &D1SplfNbr     %Bin( &DtaqE  49   4 )
     ChgVar      &D1SplfNbrB    %Sst( &DtaqE  49   4 )
     ChgVar      &D1OutqNam     %Sst( &DtaqE  53  10 )
     ChgVar      &D1OutqLib     %Sst( &DtaqE  63  10 )
     ChgVar      &D1SysNam      %Sst( &DtaqE  73   8 )
     ChgVar      &D1CrtDat      %Sst( &DtaqE  81   7 )
     ChgVar      &D1CrtTim      %Sst( &DtaqE  89   6 )
     ChgVar      &D1SplfNbrC    &D1SplfNbr
 
/*-- Get spooled file attributes:                                  --*/
     Call        QUSRSPLA   ( &SPLA0100     +
                              &RcvVarLen    +
                              'SPLA0100'    +
                              &D1Job        +
                              &IntJobId     +
                              &IntSplfId    +
                              &D1SplfNam    +
                              &D1SplFNbrB   +
                            )
 
     MonMsg      CPF0000      *None    GoTo RcvDtaQ
 
     ChgVar      &SfFrmTyp    %Sst( &SPLA0100   81  10 )
     ChgVar      &SfUsrDta    %Sst( &SPLA0100   91  10 )
     ChgVar      &SfOpnPgm    %Sst( &SPLA0100  236  10 )
 
     ChgVar      &ToUsrId     ' '
     ChgVar      &ToOutqNam   ' '
 
     If       (( &SfUsrDta  = '<userdata>' )     *And      +
               ( &SfOpnPgm  = '<pgmname >' )     *And      +
               ( &D1SplfNam = '<splfname>' ))    Do
 
     ChgVar      &ToUsrId     '<usrid >'
     ChgVar      &ToUsrAdr    '<usradr>'
     EndDo
 
 
     If        ( &D1OutqNam = '<outqname>' )     Do
 
     RtvUsrPrf   UsrPrf( &D1UsrNam )        +
                 OutQ( &ToOutqNam )         +
                 OutQlib( &ToOutqLib )      +
                 PrtDev( &PrtDev )
 
     If        ( &ToOutqNam = '*DEV  ' )    Do
 
     ChgVar      &ToOutqNam   &PrtDev
     ChgVar      &ToOutqLib   '*LIBL   '
     EndDo
 
     Else If   ( &ToOutqNam = '*WRKSTN ' )  Do
 
     RtvSysVal   QPRTDEV      &ToOutqNam
     ChgVar      &ToOutqLib   '*LIBL   '
     EndDo
     EndDo
 
     If        ( &ToOutqNam > ' ' )         Do
 
     ChgSplfA    &D1SplfNam                                +
                 Job( &D1JobNbr/&D1UsrNam/&D1JobNam )      +
                 SplNbr( &D1SplfNbr )                      +
                 OutQ( &ToOutqLib/&ToOutqNam )
     MonMsg      CPF0000
 
     SndPgmMsg   MsgId( CPF9897 )                                    +
                 MsgF( QCPFMSG )                                     +
                 MsgDta( 'Spooled file' *Bcat  &D1SplfNam  *Bcat     +
                         'from job'     *Bcat  &D1JobNbr   *Tcat '/' +
                                        *Cat   &D1UsrNam   *Tcat '/' +
                                        *Cat   &D1JobNam   *Bcat     +
                         'spool number' *Bcat  &D1SplfNbrC *Bcat     +
                         'formtype'     *Bcat  &SfFrmTyp   *Bcat     +
                         'program'      *Bcat  &SfOpnPgm   *Bcat     +
                         'moved from output queue'         *Bcat     +
                          &D1OutqNam                       *Bcat     +
                         'to'           *Bcat  &ToOutqNam  *Tcat     +
                         '.' )                                       +
                 ToPgmQ( *EXT )                                      +
                 MsgType( *COMP )
     EndDo
 
     If        ( &ToUsrId   > ' ' )         Do
 
     SndNetSplF  &D1SplfNam                                +
                 ToUsrId(( &ToUsrId &ToUsrAdr ))           +
                 Job( &D1JobNbr/&D1UsrNam/&D1JobNam )      +
                 SplNbr( &D1SplfNbr )
     MonMsg      CPF0000
 
     SndPgmMsg   MsgId( CPF9898 )                                    +
                 MsgF( QCPFMSG )                                     +
                 MsgDta( 'Spooled file' *Bcat  &D1SplfNam  *Bcat     +
                         'from job'     *Bcat  &D1JobNbr   *Tcat '/' +
                                        *Cat   &D1UsrNam   *Tcat '/' +
                                        *Cat   &D1JobNam   *Bcat     +
                         'spool number' *Bcat  &D1SplfNbrC *Bcat     +
                         'formtype'     *Bcat  &SfFrmTyp   *Bcat     +
                         'program'      *Bcat  &SfOpnPgm   *Bcat     +
                         'sent to'      *Bcat  &ToUsrId    *Bcat     +
                                               &ToUsrAdr   *Bcat     +
                         'from output queue'               *Bcat     +
                          &D1OutqNam    *Tcat  '.' )                 +
                 ToPgmQ( *EXT )                                      +
                 MsgType( *COMP )
     EndDo
 
     EndDo
     EndDo
 
     GoTo        RcvDtaQ
     EndDo
 
 Return:
     Return
 
/*-- Error routines:  -----------------------------------------------*/
 Error:
     If          &ErrPnd      GoTo EndPgm
     ChgVar      &ErrPnd      '1'
 
     RcvMsg      MsgType( *EXCP )  Msg( &ErrMsg )
     SndPgmMsg   Msg( 'Spool handling program terminated due to:'    +
                       *Bcat  &ErrMsg )                              +
                 ToMsgQ( *SYSOPR )
 
 EndPgm:
     EndPgm
