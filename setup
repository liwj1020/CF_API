#!/QOpenSys/usr/bin/ksh
PWD=`pwd`
export PWD
SRCLIB=OSSILESRC
OLIB=OSSILE
VLDCHK="*NONE"
PMTOP="*NONE"
ACTGRP="*NEW"
# if second Parm then activation group needs to be set
if["$2"]; then
  $ACTGRP = $2
fi  
# need parameter to determine the build directory
if [ "$#" -eq 0 ]; then
   print "No Arguments"
   exit
fi
# the build name is the first parameter prepended with cbx
BUILD = "cbx$1"
# make sure the libraries exist
if [ ! -e /qsys.lib/ossilesrc.lib ]; then
    system "CRTLIB $SRCLIB"
fi
if [ ! -e /qsys.lib/ossile.lib ]; then
    system "CRTLIB $OLIB"
fi
# create the working directory
export WORKDIR=$(pwd)/$BUILD
# will create source file to hold all of the sources
system -kpieb "CRTSRCPF FILE($SRCLIB/$BUILD) RCDLEN(150)"
# some samples will need to be built using a CLP as they have additional objects involved.
# search the directory for a file with $BUILD
if[ find "$WORKDIR" -name "$BUILDm.clp" ]
   # copy all of the source and just build the CLP command before calling with required parms
   for FILE in "$WORKDIR"*
    do
    # seperate the file name and extension
    export FILENAME=$(echo ${FILE} | awk -F"/" '{print $NF}')
  		export OBJ=$(echo $FILENAME | awk -F"\." '{print $1}')
  		export EXT=$(echo $FILENAME | awk -F"\." '{print $2}')
  		# when creating service program need export file
  		if[ "$EXT" = "srvsrc" ]
  			$EXT = "*blank"
  		fi	
  		# add the source member
  		system -kpieb "ADDPFM FILE($SRCLIB/$BUILD) MBR($OBJ) SRCTYPE($EXT)"
  		# copy the source
  		system -kpieb "CPYFRMSTMF FROMSTMF('${FILE}') TOMBR('/QSYS.LIB/$SRCLIB.LIB/$BUILD.FILE/$OBJ.MBR') MBROPT(*REPLACE)"
  		if[ "$OBJ" = "$BUILDm" ]
  			system -kpieb "CRTCLPGM PGM($OLIB/$OBJ) SRCFILE($SRCLIB/$BUILD)"
  		fi
   done   
   # now call the clp to build all the other required objects
   system -kpieb "CALL PGM($OLIB/$BUILDm) PARM('$OLIB')"
   # clean up and exit
   system -kpieb "DLTF FILE($SRCLIB/$BUILD)"
   exit
fi
# loop through the directory content and copy the source to the source file
for FILE in "$WORKDIR"*
  do
  # seperate the file name and extension
  export FILENAME=$(echo ${FILE} | awk -F"/" '{print $NF}')
 	export OBJ=$(echo $FILENAME | awk -F"\." '{print $1}')
 	export EXT=$(echo $FILENAME | awk -F"\." '{print $2}')
  # if the program == $OBJv we have a validity checker
  if[ "$OBJ" = "$BUILDv" ]
     $VLDCHK = "$BUILDv"
  fi 
  # if the program == $OBJo we have a prompt override program
  if[ "$OBJ" = "$BUILDo" ]
     $PMTOP = "$BUILDo"
  fi 
  # add the file member
  system -kpieb "ADDPFM FILE($SRCLIB/$BUILD) MBR($OBJ) SRCTYPE($EXT)"
  # copy the source across
		system -kpieb "CPYFRMSTMF FROMSTMF('${FILE}') TOMBR('/QSYS.LIB/$SRCLIB.LIB/$BUILD.FILE/$OBJ.MBR') MBROPT(*REPLACE)"
  if[ "$EXT" == "rpgle" ]
    # service programs can be built with standard parms. User needs to veryfy
    if[ "$OBJ" = "$BUILDs"]; then
      system -kpieb "CRTRPGMOD MODULE($OLIB/$OBJ) SRCFILE($SRCLIB/$BUILD) DBGVIEW(*LIST)"
      system -kpieb "CRTSRVPGM MODULE($OLIB/$OBJ) EXPORT(*ALL) ACTGRP($ACTGRP)"
    else
  	  # build the module and program
  	  system -kpieb "CRTRPGMOD MODULE($OLIB/$OBJ) SRCFILE($SRCLIB/$BUILD) DBGVIEW(*LIST)"
  	  system -kpieb "CRTPGM PGM($OLIB/$OBJ) ACTGRP(*NEW)"
  	fi  
  fi
  if[ "$EXT" = "cmd" ]
     # create the command
     system -kpieb "CRTCMD CMD($OLIB/$OBJ) PGM($BUILD) SRCFILE(&SRCLIB/$BUILD) SRCMBR($OBJ) HLPPNLGRP(*LIBL/$BUILDh) HLPID(*CMD) VLDCHK($VLDCHK) PMTOVRPGM($PMTOP)"
  fi
  if[ "$EXT" = "pnlgrp" ]
     # create the panel group
     system -kpieb "CRTPNLGRP PNLGRP($OLIB/$OBJ) SRCFILE($SRCLIB/$BUILD)"
  fi  
  if[ "$EXT" = "clp" ]
     #create the CL Program
     system -kpieb "CRTCLPGM PGM($OLIB/$OBJ) SRCFILE($SRCLIB/$BUILD)"
  fi   
  if[ "$EXT" = "menu" ]
     #create the UIM Menu
     system -kpieb "CRTMNU MENU($OLIB/$OBJ) TYPE(*UIM) SRCFILE($SRCLIB/$BUILD)"
  fi     
  if[ "$EXT" = "dspf" ]
     #create the UIM Menu
     system -kpieb "CRTDSPF FILE($OLIB/$OBJ) SRCFILE($SRCLIB/$BUILD)"
  fi     
done
# clean up the source file
system -kpieb "DLTF FILE($SRCLIB/$BUILD)"
